{* Šablona pro Menu modul *}

{define contentModuleMenu}
    {var $items = $moduleContent['items']}

    <nav class="Menu">
	{if $moduleContent['canEdit']}
	{getHtmlIconHref('edit', _t('Editovat menu'), 'edit_menu', $content['id_content'], 'admin')}
	{/if}
	{block MenuItems}
        {if $items}
			<ul n:if="$items" class="items">
				{foreach $items as $item}
				<li id="Menu-item-{$item['id_item']}" class="item link--{$item['link']} {$item['active']?'active':'inactive'} {$item['visible']?'visible':'invisible'}"
				    data-myshark-sub_menu_type="{$item['subMenuType']}" 
				    data-myshark-id="{$item['id_item']}"
				    {if isAllowed('ModuleMenu_item', 'edit')} data-myshark-params="{json_encode($item)}" {/if}
				    style="{if $item['geometry']['width'] != null}width: {$item['geometry']['width']};{/if
					}{if $item['geometry']['height'] != null}height: {$item['geometry']['height']};{/if
					}">
				    {if $moduleContent['canEdit']}
					{getHtmlIconHref('edit-small', _t('Editovat položku'), 'edit_menu_item', $item['id_item'], 'admin')}
					{getHtmlIconHref('move-small', _t('Přesunout položku'), 'move_menu_item', $item['id_item'], 'admin')}
				    {/if}
				    <a n:if="$item['reference']" href="{$item['reference']}" class="label">
					{$item['text']}
					</a>
					<span n:if="!$item['reference']" class="label">
					{$item['text']}
					</span>
					{include #MenuItems, items => $item['items'], moduleContent => $moduleContent}
				</li>
				{/foreach}
			</ul>
        {/if}
    {/block}
    {block MenuWindows}
	<div id="Menu-window-edit" class="window menu-window-edit">
	    <form action="#" method="post">
	    <table class="menu-window-edit-table">
		<tbody>
		    <tr class="name-row">
			<td>{_'Název:'}</td>
			<td><input name="name" value="" class="name" /></td>
		    </tr>
		    <tr class="link-row">
			<td>{_'link:'}</td>
			<td><input name="link" value="" class="link" /></td>
		    </tr>
		</tbody>
	    </table>
	    </form>
	</div>
    {/block}
	</nav>
{/define}


{define headModuleMenu}
{/define}